apiVersion: apps/v1 #we know that all the communication in k8s happen through api.
#what we want to create
#inside kind you need to define type of api you want to execute.
kind: Deployment #pod#service
metadata: #using metada and name we define the name of deployment
  name: myuserapp-deployment #a deployment name myapp-deployment is created using .metadata.name field
  labels:
    app: myuserapp
spec: #inside your deployment we need to provide spec how this deployment api will launch your pod
  replicas: 1 #it will create three pod
  selector: #the .spec.selector file define ho the deployment find which pod to manage.
    matchLabels: #.spec.selector.matchlabel it is euqivalent to map ke,value. something called as match expression
      app: myuserapp
  template: #container template deploy in three pod
    metadata:
      name: myuserapp-pod #using metadata name
      labels:
        app: myuserapp #this label should match with pod label.
    spec: #we define container spec
      containers:
      - name: myuserapp-container
        image: salonidockerhub/saloniuserapp
        ports:
          - containerPort: 8080
